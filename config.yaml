---
- Apk: # Main section
    jadx: jadx %apk -d %tempdir
    check_device: adb devices | grep device$
    get_badging: aapt dump badging %p > %tempdir/badging_output.txt
    get_package: cat %tempdir/badging_output.txt | awk '/package/{gsub("name=|'"'"'",""); printf $2}'
    get_install_status: adb shell pm list packages | grep %p
    install_package: adb install %p
    uninstall_package: adb shell pm uninstall %p
    start_app: adb shell monkey -p %p -c android.intent.category.LAUNCHER 1
    get_running_status: adb shell ps | grep %p
    stop_app: adb shell am force-stop %p
    check_app: adb shell ps -p %p | grep %p

- Sast: # Static Application Security Testing
    app_name: cat %tempdir/badging_output.txt | grep "application-label:" | sed 's/^.*://' | tr -d '\n'
    version: cat %tempdir/badging_output.txt | grep "versionName" | sed -e "s/.*versionName='//" -e "s/' .*//" | tr -d '\n'
    version_code: cat %tempdir/badging_output.txt | grep "versionCode" | sed -e "s/.*versionCode='//" -e "s/' .*//" | tr -d '\n' 
    # checksum: apksigner verify -print-certs %p | grep -Po "(?<=SHA-256 digest:) .*" | xxd -r -p | openssl base64 | tr -d '=' | tr -- '+/=' '-_' | tr -d '\n' 
    checksum: keytool -printcert -file %p/resources/META-INF/*.RSA | grep -Po "(?<=SHA256:) .*" | xxd -r -p | openssl base64 | tr -d '=' | tr -- '+/=' '-_' | tr -d '\n'
    android_id: adb shell settings get secure android_id | tr -d '\n'
    advertising_id: adb shell "su 0 grep adid_key /data/data/com.google.android.gms/shared_prefs/adid_settings.xml"
    imei: adb shell service call iphonesubinfo 1 | awk -F"'" 'NR>1 { gsub(/\./,"",$2); imei=imei $2 } END {printf imei}' | tr -d ' \t\n\r\f' 
  
    urls: grep -r -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" %p/sources/ | sort -u
    domains: grep -r -Po ".*?//\K.*?(?=/)" %p/sources/ | sort -u 
    libraries: find %p -name *.so
    classes: grep -r "public class" %p/sources/ | sed 's/\(class [^ ]*\).*/\1/'  

- Activity:
    activity_time: 5 # Time to activity.

- Network:
    # Device / emulator
    device_ip: 192.168.1.70 # IP of device or emulator.
    dev_setup_magisk_1: adb shell su -c "iptables -P OUTPUT DROP"
    dev_setup_magisk_2: adb shell su -c "iptables -P OUTPUT ACCEPT -m owner --uid-owner %u"
    dev_setup_1: adb shell "su 0 iptables -P OUTPUT DROP"
    dev_setup_2: adb shell "su 0 iptables -P OUTPUT ACCEPT -m owner --uid-owner %u"

    # Host
    host_setup_1: echo %su_pass | sudo -S iptables -t nat -F
    host_setup_2: echo %su_pass | sudo -S sysctl -w net.ipv4.ip_forward=1
    host_setup_3: echo %su_pass | sudo sysctl -w net.ipv6.conf.all.forwarding=1
    host_setup_4: echo %su_pass | sudo sysctl -w net.ipv4.conf.all.send_redirects=0
    host_setup_5: echo %su_pass | sudo iptables -t nat -A PREROUTING -s device_ip -p tcp -j REDIRECT --to-port 8080











